{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-02-17T23:00:18.967Z",
    "end": "2022-02-17T23:01:41.177Z",
    "duration": 82210,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ab71e601-887e-41bc-a269-e12e7b6112d2",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3ba6b630-149e-4def-92f1-7d20d899afe2",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "0671f776-60a6-4c76-b95d-b42005c730cb",
              "parentUUID": "3ba6b630-149e-4def-92f1-7d20d899afe2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0671f776-60a6-4c76-b95d-b42005c730cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 242,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c224898-0ffc-4506-9b51-421b15f00c02",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "bb995ed8-057b-4189-b252-8b8164df9a12",
              "parentUUID": "1c224898-0ffc-4506-9b51-421b15f00c02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "0ceee0ca-0c03-44e9-a5cc-97a8cdf80f08",
              "parentUUID": "1c224898-0ffc-4506-9b51-421b15f00c02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 316,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "5b9b60d3-594f-4585-b1fb-a30bfe16eb74",
              "parentUUID": "1c224898-0ffc-4506-9b51-421b15f00c02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "0d31efd6-86a6-4f23-9276-d3da275d2460",
              "parentUUID": "1c224898-0ffc-4506-9b51-421b15f00c02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "890c2f76-fef1-4a76-80b0-dfc65b27ff11",
              "parentUUID": "1c224898-0ffc-4506-9b51-421b15f00c02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "9ae4b5e4-892b-4285-9379-570989a2e54e",
              "parentUUID": "1c224898-0ffc-4506-9b51-421b15f00c02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "25a42ab4-2829-49a9-9b4c-03aeb838a33b",
              "parentUUID": "1c224898-0ffc-4506-9b51-421b15f00c02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb995ed8-057b-4189-b252-8b8164df9a12",
            "0ceee0ca-0c03-44e9-a5cc-97a8cdf80f08",
            "5b9b60d3-594f-4585-b1fb-a30bfe16eb74",
            "0d31efd6-86a6-4f23-9276-d3da275d2460",
            "890c2f76-fef1-4a76-80b0-dfc65b27ff11",
            "9ae4b5e4-892b-4285-9379-570989a2e54e",
            "25a42ab4-2829-49a9-9b4c-03aeb838a33b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1278,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8324f46e-ce61-40bc-a79e-4c2db2c60a5f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "ad6f16f7-6071-4e6d-9b83-1264535fab54",
              "parentUUID": "8324f46e-ce61-40bc-a79e-4c2db2c60a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "7233be53-3932-4b36-88cd-aaa0c5059c63",
              "parentUUID": "8324f46e-ce61-40bc-a79e-4c2db2c60a5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad6f16f7-6071-4e6d-9b83-1264535fab54",
            "7233be53-3932-4b36-88cd-aaa0c5059c63"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 327,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5459a706-61da-4b6e-bc71-28e0e8111dcf",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "fef0e19d-c1a2-4fbc-9162-5d6499d74a0f",
              "parentUUID": "5459a706-61da-4b6e-bc71-28e0e8111dcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "bd1cdb5e-5601-40c2-a0d7-6b36e498f0dc",
              "parentUUID": "5459a706-61da-4b6e-bc71-28e0e8111dcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "7721699b-64b7-40bb-951e-b4016a51ff4a",
              "parentUUID": "5459a706-61da-4b6e-bc71-28e0e8111dcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "3da70191-3485-4b5a-93ca-2a679b81860c",
              "parentUUID": "5459a706-61da-4b6e-bc71-28e0e8111dcf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fef0e19d-c1a2-4fbc-9162-5d6499d74a0f",
            "bd1cdb5e-5601-40c2-a0d7-6b36e498f0dc",
            "7721699b-64b7-40bb-951e-b4016a51ff4a",
            "3da70191-3485-4b5a-93ca-2a679b81860c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 536,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af0a7cbb-4f1a-4b90-85ef-e61e1059d964",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 313,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "ff7e7875-3c18-4463-91ce-cac25f41b42f",
              "parentUUID": "af0a7cbb-4f1a-4b90-85ef-e61e1059d964",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "398b6d14-4558-4d9b-adf1-fd9a5a0cecb8",
              "parentUUID": "af0a7cbb-4f1a-4b90-85ef-e61e1059d964",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff7e7875-3c18-4463-91ce-cac25f41b42f",
            "398b6d14-4558-4d9b-adf1-fd9a5a0cecb8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 592,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "62931269-5e0f-42e7-9b1f-c43b5f54cebb",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "fd72f164-4f3b-454a-a81f-2232ce08a148",
              "parentUUID": "62931269-5e0f-42e7-9b1f-c43b5f54cebb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "5abd4366-aa1e-4bd2-a9b0-be9d2b9d7062",
              "parentUUID": "62931269-5e0f-42e7-9b1f-c43b5f54cebb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd72f164-4f3b-454a-a81f-2232ce08a148",
            "5abd4366-aa1e-4bd2-a9b0-be9d2b9d7062"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 204,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1a4a422c-763a-4d08-bbf8-17efadbbe3e7",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 448,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "9f99cfb3-4dd7-48f8-8ed8-a7b495cdf220",
              "parentUUID": "1a4a422c-763a-4d08-bbf8-17efadbbe3e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8860,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "ca03eae3-5cdc-4039-9518-d351823e38f9",
              "parentUUID": "1a4a422c-763a-4d08-bbf8-17efadbbe3e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f99cfb3-4dd7-48f8-8ed8-a7b495cdf220",
            "ca03eae3-5cdc-4039-9518-d351823e38f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9308,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32bdfa98-7d0e-4f97-ab27-c23e8cc1f9f6",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "27e8b593-5312-4e3e-a3c6-ea26d3f988a2",
              "parentUUID": "32bdfa98-7d0e-4f97-ab27-c23e8cc1f9f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8895,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "2cfbd89a-6d30-4f0d-b346-d75a42966253",
              "parentUUID": "32bdfa98-7d0e-4f97-ab27-c23e8cc1f9f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1443,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "847f3e17-e38e-45b2-a800-5d0bfe1df3d8",
              "parentUUID": "32bdfa98-7d0e-4f97-ab27-c23e8cc1f9f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27e8b593-5312-4e3e-a3c6-ea26d3f988a2",
            "2cfbd89a-6d30-4f0d-b346-d75a42966253",
            "847f3e17-e38e-45b2-a800-5d0bfe1df3d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12612,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "35b860d1-60bc-4f26-b428-cd0d4d3dfc18",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "286e348e-ac73-4c55-921f-7dfbecceeebf",
              "parentUUID": "35b860d1-60bc-4f26-b428-cd0d4d3dfc18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "a6d0a746-ff81-4fcd-9f8c-a3365baa77a6",
              "parentUUID": "35b860d1-60bc-4f26-b428-cd0d4d3dfc18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "e13b8078-432c-486b-a0c9-685a6b5414be",
              "parentUUID": "35b860d1-60bc-4f26-b428-cd0d4d3dfc18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "8b0007f3-c4d1-4366-badc-00c6db1b17b8",
              "parentUUID": "35b860d1-60bc-4f26-b428-cd0d4d3dfc18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "286e348e-ac73-4c55-921f-7dfbecceeebf",
            "a6d0a746-ff81-4fcd-9f8c-a3365baa77a6",
            "e13b8078-432c-486b-a0c9-685a6b5414be",
            "8b0007f3-c4d1-4366-badc-00c6db1b17b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2788,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c406740c-8a36-4ee6-81cf-9e4c920c57b5",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4329,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "808db5ee-c0c3-474d-b252-8a6139000ed5",
              "parentUUID": "c406740c-8a36-4ee6-81cf-9e4c920c57b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4304,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1502b24c-d363-4db6-9fb9-56aba8947be3",
              "parentUUID": "c406740c-8a36-4ee6-81cf-9e4c920c57b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4398,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "565d1a76-4c7e-44f1-aa89-e389fdf5ed1e",
              "parentUUID": "c406740c-8a36-4ee6-81cf-9e4c920c57b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fde568c2-264a-4269-b06e-267bd274ce9a",
              "parentUUID": "c406740c-8a36-4ee6-81cf-9e4c920c57b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4325,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6a794d08-6650-47af-bc54-061fb19eda47",
              "parentUUID": "c406740c-8a36-4ee6-81cf-9e4c920c57b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4442,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ffe5460b-603b-46ca-b006-d33c0e9e76e2",
              "parentUUID": "c406740c-8a36-4ee6-81cf-9e4c920c57b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4332,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8bc49246-23a7-4bbc-ac53-aa9aa279f928",
              "parentUUID": "c406740c-8a36-4ee6-81cf-9e4c920c57b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4326,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1fd87424-4db3-4023-b718-cb40c30bd055",
              "parentUUID": "c406740c-8a36-4ee6-81cf-9e4c920c57b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4302,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c2ebc24c-91dc-48e0-b0c2-39786f924623",
              "parentUUID": "c406740c-8a36-4ee6-81cf-9e4c920c57b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "808db5ee-c0c3-474d-b252-8a6139000ed5",
            "1502b24c-d363-4db6-9fb9-56aba8947be3",
            "565d1a76-4c7e-44f1-aa89-e389fdf5ed1e",
            "fde568c2-264a-4269-b06e-267bd274ce9a",
            "6a794d08-6650-47af-bc54-061fb19eda47",
            "ffe5460b-603b-46ca-b006-d33c0e9e76e2",
            "8bc49246-23a7-4bbc-ac53-aa9aa279f928",
            "1fd87424-4db3-4023-b718-cb40c30bd055",
            "c2ebc24c-91dc-48e0-b0c2-39786f924623"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c64d712b-976a-448f-8e85-e0278b30509b",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4539,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "880736b6-8cca-4eb9-b9cc-e5ca99152187",
              "parentUUID": "c64d712b-976a-448f-8e85-e0278b30509b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4382,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6c123059-8c2a-4194-b322-24d23be71f93",
              "parentUUID": "c64d712b-976a-448f-8e85-e0278b30509b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4450,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:42929/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:42929/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:42929/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:42929/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:42929/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:42929/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e186b68d-ba2f-4c2d-8283-b2cbeaffc319",
              "parentUUID": "c64d712b-976a-448f-8e85-e0278b30509b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "880736b6-8cca-4eb9-b9cc-e5ca99152187",
            "6c123059-8c2a-4194-b322-24d23be71f93",
            "e186b68d-ba2f-4c2d-8283-b2cbeaffc319"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13371,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "73f583e9-ba92-45df-b13f-772cb833dfd2",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 449,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42929/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42929/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42929/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42929/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42929/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42929/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42929/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "b3cb4f0d-1884-4635-a6fa-a8462bd08447",
              "parentUUID": "73f583e9-ba92-45df-b13f-772cb833dfd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 395,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:42929/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:42929/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:42929/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:42929/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:42929/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:42929/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:42929/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42929/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:42929/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:42929/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:42929/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:42929/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "a2f6dfa5-4d5d-4362-a891-eed865e7a27f",
              "parentUUID": "73f583e9-ba92-45df-b13f-772cb833dfd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b3cb4f0d-1884-4635-a6fa-a8462bd08447",
            "a2f6dfa5-4d5d-4362-a891-eed865e7a27f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 844,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}